@model MyWebsite.Application.DTOs.ViewModels.CategoryViewModel

@{
    var title = "Danh mục sản phẩm";
    ViewData["Title"] = @title;
}

<!-- Modal -->
@await Html.PartialAsync("_SaveModal", Model)

<!-- Categories Table -->
<div class="card">
    <h5 class="card-header">
        <!-- Button trigger modal -->
        <button type="button" class="btn" id="btnAdd">
            <i class="ri-add-circle-fill"></i>
        </button>
        @title
    </h5>

    <div class="table-responsive text-nowrap table-hover">
        <table id="myTable" class="table">
            <thead>
                <tr>
                    @foreach (var column in new[] { "#",
                                  Html.DisplayNameFor(model => model.Name),
                                  Html.DisplayNameFor(model => model.ParentId),
                                  "Thao tác" })
                    {
                        <th>@column</th>
                    }
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                <tr>
                    <td>0</td>
                    <td>No data</td>
                    <td>No data</td>
                    <td>Actions</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!--/ Categories Table -->
@section Scripts
{
    <script src="~/js/registerDataTable.js"></script>
    <script>
        function handleImage(value, defaultValue = '/images/default-image.png') {
            return `${value ? `data:image/png;base64,${value}` : defaultValue}`;
        }

        function reloadTable() {
            $(elementName).DataTable().ajax.reload();
        }

        function submitForm(formElement) {
            const formData = new FormData(formElement);

            $.ajax({
                url: formElement.action,
                type: formElement.method,
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.status !== 'Error') {
                        $('#saveModal').modal('hide');
                        reloadTable();
                        showToaster("Success", formData.get('Id') === "0" ? "Thêm thành công" : "Cập nhật thành công");
                    } else {
                        showToaster("Error", formData.get('Id') === "0" ? "Thêm thất bại" : "Cập nhật thất bại");
                    }
                },
                error: function (error) {
                    console.error('Form submission error:', error);
                }
            });
        }

        function previewMainImage(input) {
            const preview = $('#previewMainImage');
            preview.empty(); // Xóa hình ảnh cũ

            if (input.files) {
                Array.from(input.files).forEach(file => {
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        $('<img>', {
                            src: event.target.result,
                            id: 'previewImage',
                            class: 'img-thumbnail mr-3 mb-2',
                            style: 'max-height: 200px; max-width: 300px;'
                        }).appendTo(preview);
                    };
                    reader.readAsDataURL(file);
                });
            }
        }

    </script>

    <script>
        const elementName = "#myTable";
        const url = '@Url.Action("GetCategoryPagination", "Categories")';
        const getById = '@Url.Action("GetById", "Categories", new { area = "Admin" })';
        const editUrl = '@Url.Action("SaveData", "Categories", new { area = "Admin" })';
        const deleteUrl = '@Url.Action("SoftDelete", "Categories", new { area = "Admin" })';

        const columns = [
            // STT
            {
                data: null, name: "stt", autoWidth: true,
                render: function (data, type, row, meta) { return meta.row + 1; }
            },
            {
                data: "name", name: "name", autoWidth: true,
                render: function (data, type, row) {
                    return `<td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-wrapper me-3 rounded-2 bg-label-secondary user-name">
                                                <div class="avatar"><img
                                                        src="${row.imageData ? `data:image/png;base64,${row.imageData}` : '/images/default-image.png'}"
                                                        alt="Product-8" class="rounded-2"></div>
                                            </div>
                                            <div class="d-flex flex-column justify-content-center">
                                                <span class="text-heading fw-medium text-wrap">${data}</span>
                                                    <!--<small class="text-truncate mb-0 d-none d-sm-block">Choose from wide range of travel accessories from popular brands </small> -->
                                            </div>
                                        </div>
                                    </td>`;
                }
            },
            {
                data: "parentName", name: "parentName", autoWidth: true
            },
            // Action Edit, Delete
            {
                data: "id", name: "id", width: "20",
                render: function (key) {
                    return `<div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                            <i class="ri-more-2-line"></i>
                                        </button>
                                        <div class="dropdown-menu" data-key="${key}">
                                            <a class="dropdown-item btn-edit" href="#" >
                                                <i class="ri-pencil-line me-1 text-warning"></i> Sửa
                                            </a>
                                            <a class="dropdown-item btn-delete" href="#">
                                                <i class="ri-delete-bin-6-line me-1 text-danger"></i> Xóa
                                            </a>
                                        </div>
                                    </div>`;
                }
            }
        ];

        registerDataTable(elementName, columns, url);

        $(document).on("click", "#btnAdd", function () {
            $('#saveModalTitle').text("Thêm mới Danh mục");
            $('#saveModal').modal('show');
            $('#formCategory').trigger("reset");
            $('#previewImage').prop('src', '/images/default-image.png');
            $('#Id').val('0');
        });

        $(document).on("click", ".btn-edit", function () {
            const key = $(this).closest("div").data("key");

            $.ajax({
                url: `${getById}/${key}`,
                method: "GET",
                success: function (data) {
                    console.log(data);

                    // Hiển thị modal trước
                    $('#saveModalTitle').text("Chỉnh sửa Danh mục");
                    $('#saveModal').modal('show');
                    $('#formCategory').trigger("reset");
                    $('#previewImage').empty();
                    $('#Id').val('0');

                    // Sau đó đợi một chút để đảm bảo modal đã được render
                    setTimeout(function () {
                        mapObjectToControlView(data);
                        $('#previewImage').prop("src", handleImage(data.imageData, '/images/default-image.png'));

                    }, 100); // Đợi 100ms
                },
                error: function (error) {
                    console.error('Error fetching banner data:', error);
                }
            });
        });

        $(document).on("click", ".btn-delete", function () {
            const key = $(this).closest("div").data("key");
            console.log("Delete key: ", key);
            $.ajax({
                url: `${deleteUrl}/${key}`,
                method: "POST",
                success: function (data) {
                    $(elementName).DataTable().ajax.reload();
                    showToaster("Success", "Xóa thành công");
                    console.log(data);
                }
            });
        });

        $('#formCategory').on("submit", function (e) {
            e.preventDefault();
            submitForm(this);
        });
    </script>
}
