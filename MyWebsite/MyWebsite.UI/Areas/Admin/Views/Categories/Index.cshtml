@model MyWebsite.Application.DTOs.ViewModels.CategoryViewModel

@{
    ViewData["Title"] = "Danh mục sản phẩm";
}

<!-- Modal -->
@await Html.PartialAsync("_SaveModal", Model)

<!-- Categories Table -->
<div class="card">
    <h5 class="card-header">
        <!-- Button trigger modal -->
        <button type="button" class="btn" id="btnAdd">
            <i class="ri-add-circle-fill"></i>
        </button>
        Danh mục sản phẩm
    </h5>

    <div class="table-responsive text-nowrap table-hover">
        <table id="myTable" class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ParentId)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                <tr>
                    <td>0</td>
                    <td>No data</td>
                    <td>No data</td>
                    <td>
                        <div class="dropdown">
                            <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                <i class="ri-more-2-line"></i>
                            </button>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" asp-action="SaveData" asp-controller="Categories"
                                   asp-area="Admin" asp-route-id="${key}">
                                    <i class="ri-pencil-line me-1"></i> Sửa
                                </a>
                                <a class="dropdown-item" asp-action="SoftDelete" asp-controller="Categories"
                                   asp-area="Admin" asp-route-id="${key}">
                                    <i class="ri-delete-bin-6-line me-1"></i> Xóa
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!--/ Categories Table -->
@section Scripts
{
    <script src="~/js/registerDataTable.js"></script>

    <script>
        const elementName = "#myTable";
        const url = '@Url.Action("GetCategoryPagination", "Categories")';
        const getById = '@Url.Action("GetById", "Categories", new { area = "Admin" })';
        const editUrl = '@Url.Action("SaveData", "Categories", new { area = "Admin" })';
        const deleteUrl = '@Url.Action("SoftDelete", "Categories", new { area = "Admin" })';

        const columns = [
            // STT
            {
                data: null, name: "stt", autoWidth: true,
                render: function (data, type, row, meta) { return meta.row + 1; }
            },
            {
                data: "name", name: "name", autoWidth: true,
                render: function (data, type, row) {
                    return `<td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-wrapper me-3 rounded-2 bg-label-secondary user-name">
                                                <div class="avatar"><img
                                                        src="${row.imageData ? `data:image/png;base64,${row.imageData}` : '/images/default-image.png'}"
                                                        alt="Product-8" class="rounded-2"></div>
                                            </div>
                                            <div class="d-flex flex-column justify-content-center">
                                                <span class="text-heading fw-medium text-wrap">${data}</span>
                                                    <!--<small class="text-truncate mb-0 d-none d-sm-block">Choose from wide range of travel accessories from popular brands </small> -->
                                            </div>
                                        </div>
                                    </td>`;
                }
            },
            {
                data: "parentId", name: "parentId", autoWidth: true
            },
            // Action Edit, Delete
            {
                data: "id", name: "id", width: "20",
                render: function (key) {
                    return `<div class="dropdown">
                                                            <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                                <i class="ri-more-2-line"></i>
                                                            </button>
                                                            <div class="dropdown-menu" data-key="${key}">
                                                                <a class="dropdown-item btn-edit" href="#" >
                                                                    <i class="ri-pencil-line me-1 text-warning"></i> Edit
                                                                </a>
                                                                <a class="dropdown-item btn-delete" href="#">
                                                                    <i class="ri-delete-bin-6-line me-1 text-danger"></i> Delete
                                                                </a>
                                                            </div>
                                                        </div>`;
                }
            }
        ];

        registerDataTable(elementName, columns, url);

        $(document).on("click", "#btnAdd", function () {
            $('#saveModal').modal('show');
            $('#formCategory').trigger("reset");
            document.getElementById('previewImage').src = '/images/default-image.png';
        });

        $(document).on("click", ".btn-edit", function () {
            const key = $(this).closest("div").data("key");

            $.ajax({
                url: `${getById}/${key}`,
                method: "GET",
                success: function (data) {
                    console.log(data);
                    mapObjectToControlView(data);
                    // Chèn ảnh mặc định nếu không tồn tại
                    document.getElementById('previewImage').src = `${data.imageData ? `data:image/png;base64,${data.imageData}` : '/images/default-image.png'}`;
                    $('#saveModal').modal('show');
                }
            });
        });

        $(document).on("click", ".btn-delete", function () {
            const key = $(this).closest("div").data("key");
            console.log("Delete key: ", key);
            $.ajax({
                url: `${deleteUrl}/${key}`,
                method: "POST",
                success: function (data) {
                    $(elementName).DataTable().ajax.reload();
                    showToaster("Success", "Xóa thành công");
                    console.log(data);
                }
            });
        });

        function previewMainImage(input) {
            var preview = document.getElementById('previewMainImage');
            preview.innerHTML = ''; // Xóa các hình ảnh trước đó để cập nhật hình ảnh mới

            if (input.files) {
                var filesAmount = input.files.length;

                for (var i = 0; i < filesAmount; i++) {
                    var reader = new FileReader();

                    reader.onload = function (event) {
                        var image = document.createElement('img');
                        image.className = 'img-thumbnail mr-3 mb-2';
                        image.style.maxHeight = '200px';
                        image.style.maxWidth = '300px';
                        image.src = event.target.result;
                        preview.appendChild(image);
                    }

                    reader.readAsDataURL(input.files[i]);
                }
            }
        }

        $('#formCategory').submit(function (e) {

            e.preventDefault();

            var formData = new FormData(this);
            var id = formData.get('Id');
            console.log("Id: ", id);

            $.ajax({
                url: $(this).attr('action'),
                type: $(this).attr('method'),
                data: formData,
                contentType: false, // Important: Do not set content type
                processData: false, // Important: Do not process data
                success: function (response) {
                    $(elementName).DataTable().ajax.reload();
                    showToaster("Success", id == 0 ? "Tạo thành công" : "Cập nhật thành công");
                    console.log(response);
                    $('#saveModal').modal('hide');
                },
                error: function (response) {
                    console.log(response);
                }
            });
        });
    </script>
}
